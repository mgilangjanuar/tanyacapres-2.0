import { ReactMarkdown } from 'react-markdown/lib/react-markdown'
import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'
import { dracula } from 'react-syntax-highlighter/dist/cjs/styles/prism'
import remarkGfm from 'remark-gfm'

export default function Disclaimer() {
  return <div className="prose container py-6">
    <ReactMarkdown
      children={`## Disclaimer: TanyaCapres

TanyaCapres is an AI-powered web application designed to provide information related to the Indonesian Presidential Election 2024 based on user queries. It is important to note that the results generated by the AI are solely derived from machine learning algorithms and may not reflect real-time or neutral perspectives.

The information presented by TanyaCapres should be regarded as AI-generated content and may not be entirely free from biases inherent in the training data. Users are advised to cross-reference the information obtained through this platform with reliable and up-to-date sources to ensure the accuracy and impartiality of the details pertaining to the presidential election.

TanyaCapres is intended for informational purposes only, and users should exercise discretion in interpreting and relying on the generated results. The developers and operators of TanyaCapres do not endorse or guarantee the accuracy of the information presented, and users are encouraged to seek additional sources for comprehensive and unbiased information on the Indonesian Presidential Election 2024.

By using TanyaCapres, users acknowledge and accept that the AI-generated results may not be reflective of real-time events or exhibit complete neutrality. The developers strive to improve the accuracy and fairness of the AI, but users are ultimately responsible for verifying the information obtained through this platform for their own assurance.`}
      remarkPlugins={[remarkGfm]}
      components={{
        code({ inline, className, children, ...props }) {
          const match = /language-(\w+)/.exec(className || '')
          return !inline ? (
            <SyntaxHighlighter
              children={String(children).replace(/\n$/, '')}
              style={dracula as any}
              language={match?.[1]}
              PreTag="div"
              {...props}
            />
          ) : (
            <code className={className} {...props}>
              {children}
            </code>
          )
        }
      }} />
  </div>
}
